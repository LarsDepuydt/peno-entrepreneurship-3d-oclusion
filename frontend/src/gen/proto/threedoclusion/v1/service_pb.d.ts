// @generated by protoc-gen-es v1.2.0
// @generated from file threedoclusion/v1/service.proto (package threedoclusion.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message threedoclusion.v1.ScanSave
 */
export declare class ScanSave extends Message<ScanSave> {
  /**
   * @generated from field: int32 scan_id = 1;
   */
  scanId: number;

  /**
   * @generated from field: string timestamp_save = 2;
   */
  timestampSave: string;

  /**
   * @generated from field: float lower_x = 3;
   */
  lowerX: number;

  /**
   * @generated from field: float lower_y = 4;
   */
  lowerY: number;

  /**
   * @generated from field: float lower_z = 5;
   */
  lowerZ: number;

  /**
   * @generated from field: float lower_r_x = 6;
   */
  lowerRX: number;

  /**
   * @generated from field: float lower_r_y = 7;
   */
  lowerRY: number;

  /**
   * @generated from field: float lower_r_z = 8;
   */
  lowerRZ: number;

  /**
   * @generated from field: float upper_x = 9;
   */
  upperX: number;

  /**
   * @generated from field: float upper_y = 10;
   */
  upperY: number;

  /**
   * @generated from field: float upper_z = 11;
   */
  upperZ: number;

  /**
   * @generated from field: float upper_r_x = 12;
   */
  upperRX: number;

  /**
   * @generated from field: float upper_r_y = 13;
   */
  upperRY: number;

  /**
   * @generated from field: float upper_r_z = 14;
   */
  upperRZ: number;

  constructor(data?: PartialMessage<ScanSave>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "threedoclusion.v1.ScanSave";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ScanSave;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ScanSave;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ScanSave;

  static equals(a: ScanSave | PlainMessage<ScanSave> | undefined, b: ScanSave | PlainMessage<ScanSave> | undefined): boolean;
}

/**
 * TAGS
 *
 * @generated from message threedoclusion.v1.Tag
 */
export declare class Tag extends Message<Tag> {
  /**
   * @generated from field: int32 id = 1;
   */
  id: number;

  /**
   * @generated from field: string bite = 2;
   */
  bite: string;

  constructor(data?: PartialMessage<Tag>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "threedoclusion.v1.Tag";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Tag;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Tag;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Tag;

  static equals(a: Tag | PlainMessage<Tag> | undefined, b: Tag | PlainMessage<Tag> | undefined): boolean;
}

/**
 * @generated from message threedoclusion.v1.AddTagRequest
 */
export declare class AddTagRequest extends Message<AddTagRequest> {
  /**
   * @generated from field: string bite = 1;
   */
  bite: string;

  constructor(data?: PartialMessage<AddTagRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "threedoclusion.v1.AddTagRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddTagRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddTagRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddTagRequest;

  static equals(a: AddTagRequest | PlainMessage<AddTagRequest> | undefined, b: AddTagRequest | PlainMessage<AddTagRequest> | undefined): boolean;
}

/**
 * @generated from message threedoclusion.v1.AddTagResponse
 */
export declare class AddTagResponse extends Message<AddTagResponse> {
  /**
   * @generated from field: string message = 1;
   */
  message: string;

  /**
   * @generated from field: int32 id = 2;
   */
  id: number;

  constructor(data?: PartialMessage<AddTagResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "threedoclusion.v1.AddTagResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddTagResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddTagResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddTagResponse;

  static equals(a: AddTagResponse | PlainMessage<AddTagResponse> | undefined, b: AddTagResponse | PlainMessage<AddTagResponse> | undefined): boolean;
}

/**
 * @generated from message threedoclusion.v1.DeleteTagByIdRequest
 */
export declare class DeleteTagByIdRequest extends Message<DeleteTagByIdRequest> {
  /**
   * @generated from field: int32 id = 1;
   */
  id: number;

  constructor(data?: PartialMessage<DeleteTagByIdRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "threedoclusion.v1.DeleteTagByIdRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteTagByIdRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteTagByIdRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteTagByIdRequest;

  static equals(a: DeleteTagByIdRequest | PlainMessage<DeleteTagByIdRequest> | undefined, b: DeleteTagByIdRequest | PlainMessage<DeleteTagByIdRequest> | undefined): boolean;
}

/**
 * @generated from message threedoclusion.v1.DeleteTagByIdResponse
 */
export declare class DeleteTagByIdResponse extends Message<DeleteTagByIdResponse> {
  /**
   * @generated from field: string message = 1;
   */
  message: string;

  /**
   * @generated from field: string bite = 2;
   */
  bite: string;

  constructor(data?: PartialMessage<DeleteTagByIdResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "threedoclusion.v1.DeleteTagByIdResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteTagByIdResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteTagByIdResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteTagByIdResponse;

  static equals(a: DeleteTagByIdResponse | PlainMessage<DeleteTagByIdResponse> | undefined, b: DeleteTagByIdResponse | PlainMessage<DeleteTagByIdResponse> | undefined): boolean;
}

/**
 * @generated from message threedoclusion.v1.GetAllTagsRequest
 */
export declare class GetAllTagsRequest extends Message<GetAllTagsRequest> {
  constructor(data?: PartialMessage<GetAllTagsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "threedoclusion.v1.GetAllTagsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAllTagsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAllTagsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAllTagsRequest;

  static equals(a: GetAllTagsRequest | PlainMessage<GetAllTagsRequest> | undefined, b: GetAllTagsRequest | PlainMessage<GetAllTagsRequest> | undefined): boolean;
}

/**
 * @generated from message threedoclusion.v1.GetAllTagsResponse
 */
export declare class GetAllTagsResponse extends Message<GetAllTagsResponse> {
  /**
   * @generated from field: repeated threedoclusion.v1.Tag tags = 1;
   */
  tags: Tag[];

  constructor(data?: PartialMessage<GetAllTagsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "threedoclusion.v1.GetAllTagsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAllTagsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAllTagsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAllTagsResponse;

  static equals(a: GetAllTagsResponse | PlainMessage<GetAllTagsResponse> | undefined, b: GetAllTagsResponse | PlainMessage<GetAllTagsResponse> | undefined): boolean;
}

/**
 * @generated from message threedoclusion.v1.GetTagByIdRequest
 */
export declare class GetTagByIdRequest extends Message<GetTagByIdRequest> {
  /**
   * @generated from field: int32 id = 1;
   */
  id: number;

  constructor(data?: PartialMessage<GetTagByIdRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "threedoclusion.v1.GetTagByIdRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetTagByIdRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetTagByIdRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetTagByIdRequest;

  static equals(a: GetTagByIdRequest | PlainMessage<GetTagByIdRequest> | undefined, b: GetTagByIdRequest | PlainMessage<GetTagByIdRequest> | undefined): boolean;
}

/**
 * @generated from message threedoclusion.v1.GetTagByIdResponse
 */
export declare class GetTagByIdResponse extends Message<GetTagByIdResponse> {
  /**
   * @generated from field: int32 id = 1;
   */
  id: number;

  /**
   * @generated from field: string bite = 2;
   */
  bite: string;

  constructor(data?: PartialMessage<GetTagByIdResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "threedoclusion.v1.GetTagByIdResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetTagByIdResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetTagByIdResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetTagByIdResponse;

  static equals(a: GetTagByIdResponse | PlainMessage<GetTagByIdResponse> | undefined, b: GetTagByIdResponse | PlainMessage<GetTagByIdResponse> | undefined): boolean;
}

/**
 * @generated from message threedoclusion.v1.GetAllTagsByTypeRequest
 */
export declare class GetAllTagsByTypeRequest extends Message<GetAllTagsByTypeRequest> {
  /**
   * @generated from field: string type = 1;
   */
  type: string;

  constructor(data?: PartialMessage<GetAllTagsByTypeRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "threedoclusion.v1.GetAllTagsByTypeRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAllTagsByTypeRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAllTagsByTypeRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAllTagsByTypeRequest;

  static equals(a: GetAllTagsByTypeRequest | PlainMessage<GetAllTagsByTypeRequest> | undefined, b: GetAllTagsByTypeRequest | PlainMessage<GetAllTagsByTypeRequest> | undefined): boolean;
}

/**
 * @generated from message threedoclusion.v1.GetAllTagsByTypeResponse
 */
export declare class GetAllTagsByTypeResponse extends Message<GetAllTagsByTypeResponse> {
  /**
   * @generated from field: repeated threedoclusion.v1.Tag tags = 1;
   */
  tags: Tag[];

  constructor(data?: PartialMessage<GetAllTagsByTypeResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "threedoclusion.v1.GetAllTagsByTypeResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAllTagsByTypeResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAllTagsByTypeResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAllTagsByTypeResponse;

  static equals(a: GetAllTagsByTypeResponse | PlainMessage<GetAllTagsByTypeResponse> | undefined, b: GetAllTagsByTypeResponse | PlainMessage<GetAllTagsByTypeResponse> | undefined): boolean;
}

/**
 * SCANS
 *
 * @generated from message threedoclusion.v1.Scan
 */
export declare class Scan extends Message<Scan> {
  /**
   * @generated from field: int32 id = 1;
   */
  id: number;

  /**
   * @generated from field: string scan = 2;
   */
  scan: string;

  /**
   * @generated from field: string created_at = 3;
   */
  createdAt: string;

  /**
   * @generated from field: string notes = 4;
   */
  notes: string;

  /**
   * @generated from field: int32 patient_id = 5;
   */
  patientId: number;

  constructor(data?: PartialMessage<Scan>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "threedoclusion.v1.Scan";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Scan;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Scan;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Scan;

  static equals(a: Scan | PlainMessage<Scan> | undefined, b: Scan | PlainMessage<Scan> | undefined): boolean;
}

/**
 * @generated from message threedoclusion.v1.AddScanRequest
 */
export declare class AddScanRequest extends Message<AddScanRequest> {
  /**
   * @generated from field: string scan_file = 1;
   */
  scanFile: string;

  /**
   * @generated from field: string notes = 2;
   */
  notes: string;

  /**
   * @generated from field: int32 patient_id = 3;
   */
  patientId: number;

  constructor(data?: PartialMessage<AddScanRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "threedoclusion.v1.AddScanRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddScanRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddScanRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddScanRequest;

  static equals(a: AddScanRequest | PlainMessage<AddScanRequest> | undefined, b: AddScanRequest | PlainMessage<AddScanRequest> | undefined): boolean;
}

/**
 * @generated from message threedoclusion.v1.AddScanResponse
 */
export declare class AddScanResponse extends Message<AddScanResponse> {
  /**
   * @generated from field: string message = 1;
   */
  message: string;

  /**
   * @generated from field: int32 id = 2;
   */
  id: number;

  constructor(data?: PartialMessage<AddScanResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "threedoclusion.v1.AddScanResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddScanResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddScanResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddScanResponse;

  static equals(a: AddScanResponse | PlainMessage<AddScanResponse> | undefined, b: AddScanResponse | PlainMessage<AddScanResponse> | undefined): boolean;
}

/**
 * @generated from message threedoclusion.v1.DeleteScanByIdRequest
 */
export declare class DeleteScanByIdRequest extends Message<DeleteScanByIdRequest> {
  /**
   * @generated from field: int32 id = 1;
   */
  id: number;

  constructor(data?: PartialMessage<DeleteScanByIdRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "threedoclusion.v1.DeleteScanByIdRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteScanByIdRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteScanByIdRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteScanByIdRequest;

  static equals(a: DeleteScanByIdRequest | PlainMessage<DeleteScanByIdRequest> | undefined, b: DeleteScanByIdRequest | PlainMessage<DeleteScanByIdRequest> | undefined): boolean;
}

/**
 * @generated from message threedoclusion.v1.DeleteScanByIdResponse
 */
export declare class DeleteScanByIdResponse extends Message<DeleteScanByIdResponse> {
  /**
   * @generated from field: string message = 1;
   */
  message: string;

  /**
   * @generated from field: int32 id = 2;
   */
  id: number;

  constructor(data?: PartialMessage<DeleteScanByIdResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "threedoclusion.v1.DeleteScanByIdResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteScanByIdResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteScanByIdResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteScanByIdResponse;

  static equals(a: DeleteScanByIdResponse | PlainMessage<DeleteScanByIdResponse> | undefined, b: DeleteScanByIdResponse | PlainMessage<DeleteScanByIdResponse> | undefined): boolean;
}

/**
 * @generated from message threedoclusion.v1.GetAllScansRequest
 */
export declare class GetAllScansRequest extends Message<GetAllScansRequest> {
  constructor(data?: PartialMessage<GetAllScansRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "threedoclusion.v1.GetAllScansRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAllScansRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAllScansRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAllScansRequest;

  static equals(a: GetAllScansRequest | PlainMessage<GetAllScansRequest> | undefined, b: GetAllScansRequest | PlainMessage<GetAllScansRequest> | undefined): boolean;
}

/**
 * @generated from message threedoclusion.v1.GetAllScansResponse
 */
export declare class GetAllScansResponse extends Message<GetAllScansResponse> {
  /**
   * @generated from field: repeated threedoclusion.v1.Scan scans = 1;
   */
  scans: Scan[];

  constructor(data?: PartialMessage<GetAllScansResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "threedoclusion.v1.GetAllScansResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAllScansResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAllScansResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAllScansResponse;

  static equals(a: GetAllScansResponse | PlainMessage<GetAllScansResponse> | undefined, b: GetAllScansResponse | PlainMessage<GetAllScansResponse> | undefined): boolean;
}

/**
 * @generated from message threedoclusion.v1.GetScanByIdRequest
 */
export declare class GetScanByIdRequest extends Message<GetScanByIdRequest> {
  /**
   * @generated from field: int32 id = 1;
   */
  id: number;

  constructor(data?: PartialMessage<GetScanByIdRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "threedoclusion.v1.GetScanByIdRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetScanByIdRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetScanByIdRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetScanByIdRequest;

  static equals(a: GetScanByIdRequest | PlainMessage<GetScanByIdRequest> | undefined, b: GetScanByIdRequest | PlainMessage<GetScanByIdRequest> | undefined): boolean;
}

/**
 * @generated from message threedoclusion.v1.GetScanByIdResponse
 */
export declare class GetScanByIdResponse extends Message<GetScanByIdResponse> {
  /**
   * @generated from field: int32 id = 1;
   */
  id: number;

  /**
   * @generated from field: string scan = 2;
   */
  scan: string;

  /**
   * @generated from field: string created_at = 3;
   */
  createdAt: string;

  /**
   * @generated from field: string notes = 4;
   */
  notes: string;

  /**
   * @generated from field: int32 patient_id = 5;
   */
  patientId: number;

  constructor(data?: PartialMessage<GetScanByIdResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "threedoclusion.v1.GetScanByIdResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetScanByIdResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetScanByIdResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetScanByIdResponse;

  static equals(a: GetScanByIdResponse | PlainMessage<GetScanByIdResponse> | undefined, b: GetScanByIdResponse | PlainMessage<GetScanByIdResponse> | undefined): boolean;
}

/**
 * PATIENT
 *
 * @generated from message threedoclusion.v1.Patient
 */
export declare class Patient extends Message<Patient> {
  /**
   * @generated from field: int32 id = 1;
   */
  id: number;

  /**
   * @generated from field: string first_name = 2;
   */
  firstName: string;

  /**
   * @generated from field: string last_name = 3;
   */
  lastName: string;

  /**
   * @generated from field: bool pinned = 4;
   */
  pinned: boolean;

  /**
   * @generated from field: string notes = 5;
   */
  notes: string;

  /**
   * @generated from field: int32 dentist_id = 6;
   */
  dentistId: number;

  constructor(data?: PartialMessage<Patient>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "threedoclusion.v1.Patient";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Patient;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Patient;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Patient;

  static equals(a: Patient | PlainMessage<Patient> | undefined, b: Patient | PlainMessage<Patient> | undefined): boolean;
}

/**
 * @generated from message threedoclusion.v1.AddPatientRequest
 */
export declare class AddPatientRequest extends Message<AddPatientRequest> {
  /**
   * @generated from field: string first_name = 1;
   */
  firstName: string;

  /**
   * @generated from field: string last_name = 2;
   */
  lastName: string;

  /**
   * @generated from field: bool pinned = 3;
   */
  pinned: boolean;

  /**
   * @generated from field: string notes = 4;
   */
  notes: string;

  /**
   * @generated from field: int32 dentist_id = 5;
   */
  dentistId: number;

  constructor(data?: PartialMessage<AddPatientRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "threedoclusion.v1.AddPatientRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddPatientRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddPatientRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddPatientRequest;

  static equals(a: AddPatientRequest | PlainMessage<AddPatientRequest> | undefined, b: AddPatientRequest | PlainMessage<AddPatientRequest> | undefined): boolean;
}

/**
 * @generated from message threedoclusion.v1.AddPatientResponse
 */
export declare class AddPatientResponse extends Message<AddPatientResponse> {
  /**
   * @generated from field: string message = 1;
   */
  message: string;

  /**
   * @generated from field: int32 id = 2;
   */
  id: number;

  constructor(data?: PartialMessage<AddPatientResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "threedoclusion.v1.AddPatientResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddPatientResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddPatientResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddPatientResponse;

  static equals(a: AddPatientResponse | PlainMessage<AddPatientResponse> | undefined, b: AddPatientResponse | PlainMessage<AddPatientResponse> | undefined): boolean;
}

/**
 * @generated from message threedoclusion.v1.TagResponse
 */
export declare class TagResponse extends Message<TagResponse> {
  /**
   * @generated from field: int32 id = 1;
   */
  id: number;

  /**
   * @generated from field: string color = 2;
   */
  color: string;

  /**
   * @generated from field: string text = 3;
   */
  text: string;

  constructor(data?: PartialMessage<TagResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "threedoclusion.v1.TagResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TagResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TagResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TagResponse;

  static equals(a: TagResponse | PlainMessage<TagResponse> | undefined, b: TagResponse | PlainMessage<TagResponse> | undefined): boolean;
}

/**
 * @generated from message threedoclusion.v1.SendVRRequest
 */
export declare class SendVRRequest extends Message<SendVRRequest> {
  /**
   * @generated from field: int32 client_id = 1;
   */
  clientId: number;

  /**
   * @generated from field: int32 scan_id = 2;
   */
  scanId: number;

  constructor(data?: PartialMessage<SendVRRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "threedoclusion.v1.SendVRRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SendVRRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SendVRRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SendVRRequest;

  static equals(a: SendVRRequest | PlainMessage<SendVRRequest> | undefined, b: SendVRRequest | PlainMessage<SendVRRequest> | undefined): boolean;
}

/**
 * @generated from message threedoclusion.v1.SendVRResponse
 */
export declare class SendVRResponse extends Message<SendVRResponse> {
  /**
   * @generated from field: string feedback = 1;
   */
  feedback: string;

  constructor(data?: PartialMessage<SendVRResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "threedoclusion.v1.SendVRResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SendVRResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SendVRResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SendVRResponse;

  static equals(a: SendVRResponse | PlainMessage<SendVRResponse> | undefined, b: SendVRResponse | PlainMessage<SendVRResponse> | undefined): boolean;
}

/**
 * @generated from message threedoclusion.v1.WaitingRequest
 */
export declare class WaitingRequest extends Message<WaitingRequest> {
  /**
   * @generated from field: int32 unique_code = 1;
   */
  uniqueCode: number;

  constructor(data?: PartialMessage<WaitingRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "threedoclusion.v1.WaitingRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WaitingRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WaitingRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WaitingRequest;

  static equals(a: WaitingRequest | PlainMessage<WaitingRequest> | undefined, b: WaitingRequest | PlainMessage<WaitingRequest> | undefined): boolean;
}

/**
 * @generated from message threedoclusion.v1.WaitingResponse
 */
export declare class WaitingResponse extends Message<WaitingResponse> {
  /**
   * @generated from field: bool redirect = 1;
   */
  redirect: boolean;

  /**
   * @generated from field: string url = 2;
   */
  url: string;

  constructor(data?: PartialMessage<WaitingResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "threedoclusion.v1.WaitingResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WaitingResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WaitingResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WaitingResponse;

  static equals(a: WaitingResponse | PlainMessage<WaitingResponse> | undefined, b: WaitingResponse | PlainMessage<WaitingResponse> | undefined): boolean;
}

/**
 * @generated from message threedoclusion.v1.DeletePatientByIdRequest
 */
export declare class DeletePatientByIdRequest extends Message<DeletePatientByIdRequest> {
  /**
   * @generated from field: int32 id = 1;
   */
  id: number;

  constructor(data?: PartialMessage<DeletePatientByIdRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "threedoclusion.v1.DeletePatientByIdRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeletePatientByIdRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeletePatientByIdRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeletePatientByIdRequest;

  static equals(a: DeletePatientByIdRequest | PlainMessage<DeletePatientByIdRequest> | undefined, b: DeletePatientByIdRequest | PlainMessage<DeletePatientByIdRequest> | undefined): boolean;
}

/**
 * @generated from message threedoclusion.v1.DeletePatientByIdResponse
 */
export declare class DeletePatientByIdResponse extends Message<DeletePatientByIdResponse> {
  /**
   * @generated from field: string message = 1;
   */
  message: string;

  /**
   * @generated from field: int32 id = 2;
   */
  id: number;

  /**
   * @generated from field: string first_name = 3;
   */
  firstName: string;

  /**
   * @generated from field: string last_name = 4;
   */
  lastName: string;

  constructor(data?: PartialMessage<DeletePatientByIdResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "threedoclusion.v1.DeletePatientByIdResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeletePatientByIdResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeletePatientByIdResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeletePatientByIdResponse;

  static equals(a: DeletePatientByIdResponse | PlainMessage<DeletePatientByIdResponse> | undefined, b: DeletePatientByIdResponse | PlainMessage<DeletePatientByIdResponse> | undefined): boolean;
}

/**
 * @generated from message threedoclusion.v1.GetAllPatientsRequest
 */
export declare class GetAllPatientsRequest extends Message<GetAllPatientsRequest> {
  constructor(data?: PartialMessage<GetAllPatientsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "threedoclusion.v1.GetAllPatientsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAllPatientsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAllPatientsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAllPatientsRequest;

  static equals(a: GetAllPatientsRequest | PlainMessage<GetAllPatientsRequest> | undefined, b: GetAllPatientsRequest | PlainMessage<GetAllPatientsRequest> | undefined): boolean;
}

/**
 * @generated from message threedoclusion.v1.GetAllPatientsResponse
 */
export declare class GetAllPatientsResponse extends Message<GetAllPatientsResponse> {
  /**
   * @generated from field: repeated threedoclusion.v1.Patient patients = 1;
   */
  patients: Patient[];

  constructor(data?: PartialMessage<GetAllPatientsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "threedoclusion.v1.GetAllPatientsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAllPatientsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAllPatientsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAllPatientsResponse;

  static equals(a: GetAllPatientsResponse | PlainMessage<GetAllPatientsResponse> | undefined, b: GetAllPatientsResponse | PlainMessage<GetAllPatientsResponse> | undefined): boolean;
}

/**
 * @generated from message threedoclusion.v1.GetPatientByIdRequest
 */
export declare class GetPatientByIdRequest extends Message<GetPatientByIdRequest> {
  /**
   * @generated from field: int32 id = 1;
   */
  id: number;

  constructor(data?: PartialMessage<GetPatientByIdRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "threedoclusion.v1.GetPatientByIdRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPatientByIdRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPatientByIdRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPatientByIdRequest;

  static equals(a: GetPatientByIdRequest | PlainMessage<GetPatientByIdRequest> | undefined, b: GetPatientByIdRequest | PlainMessage<GetPatientByIdRequest> | undefined): boolean;
}

/**
 * @generated from message threedoclusion.v1.GetPatientByIdResponse
 */
export declare class GetPatientByIdResponse extends Message<GetPatientByIdResponse> {
  /**
   * @generated from field: int32 id = 1;
   */
  id: number;

  /**
   * @generated from field: string first_name = 2;
   */
  firstName: string;

  /**
   * @generated from field: string last_name = 3;
   */
  lastName: string;

  /**
   * @generated from field: bool pinned = 4;
   */
  pinned: boolean;

  /**
   * @generated from field: string notes = 5;
   */
  notes: string;

  /**
   * @generated from field: int32 dentist_id = 6;
   */
  dentistId: number;

  constructor(data?: PartialMessage<GetPatientByIdResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "threedoclusion.v1.GetPatientByIdResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPatientByIdResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPatientByIdResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPatientByIdResponse;

  static equals(a: GetPatientByIdResponse | PlainMessage<GetPatientByIdResponse> | undefined, b: GetPatientByIdResponse | PlainMessage<GetPatientByIdResponse> | undefined): boolean;
}

/**
 * @generated from message threedoclusion.v1.GetPatientByNameRequest
 */
export declare class GetPatientByNameRequest extends Message<GetPatientByNameRequest> {
  /**
   * @generated from field: optional string first_name = 1;
   */
  firstName?: string;

  /**
   * @generated from field: optional string last_name = 2;
   */
  lastName?: string;

  constructor(data?: PartialMessage<GetPatientByNameRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "threedoclusion.v1.GetPatientByNameRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPatientByNameRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPatientByNameRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPatientByNameRequest;

  static equals(a: GetPatientByNameRequest | PlainMessage<GetPatientByNameRequest> | undefined, b: GetPatientByNameRequest | PlainMessage<GetPatientByNameRequest> | undefined): boolean;
}

/**
 * @generated from message threedoclusion.v1.GetPatientByNameResponse
 */
export declare class GetPatientByNameResponse extends Message<GetPatientByNameResponse> {
  /**
   * @generated from field: repeated threedoclusion.v1.Patient patients = 1;
   */
  patients: Patient[];

  constructor(data?: PartialMessage<GetPatientByNameResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "threedoclusion.v1.GetPatientByNameResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPatientByNameResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPatientByNameResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPatientByNameResponse;

  static equals(a: GetPatientByNameResponse | PlainMessage<GetPatientByNameResponse> | undefined, b: GetPatientByNameResponse | PlainMessage<GetPatientByNameResponse> | undefined): boolean;
}

/**
 * @generated from message threedoclusion.v1.UpdatePatientByIdRequest
 */
export declare class UpdatePatientByIdRequest extends Message<UpdatePatientByIdRequest> {
  /**
   * @generated from field: int32 id = 1;
   */
  id: number;

  /**
   * @generated from field: string first_name = 2;
   */
  firstName: string;

  /**
   * @generated from field: string last_name = 3;
   */
  lastName: string;

  /**
   * @generated from field: bool pinned = 4;
   */
  pinned: boolean;

  /**
   * @generated from field: string notes = 5;
   */
  notes: string;

  /**
   * @generated from field: int32 dentist_id = 6;
   */
  dentistId: number;

  constructor(data?: PartialMessage<UpdatePatientByIdRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "threedoclusion.v1.UpdatePatientByIdRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdatePatientByIdRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdatePatientByIdRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdatePatientByIdRequest;

  static equals(a: UpdatePatientByIdRequest | PlainMessage<UpdatePatientByIdRequest> | undefined, b: UpdatePatientByIdRequest | PlainMessage<UpdatePatientByIdRequest> | undefined): boolean;
}

/**
 * @generated from message threedoclusion.v1.UpdatePatientByIdResponse
 */
export declare class UpdatePatientByIdResponse extends Message<UpdatePatientByIdResponse> {
  /**
   * @generated from field: string message = 1;
   */
  message: string;

  constructor(data?: PartialMessage<UpdatePatientByIdResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "threedoclusion.v1.UpdatePatientByIdResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdatePatientByIdResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdatePatientByIdResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdatePatientByIdResponse;

  static equals(a: UpdatePatientByIdResponse | PlainMessage<UpdatePatientByIdResponse> | undefined, b: UpdatePatientByIdResponse | PlainMessage<UpdatePatientByIdResponse> | undefined): boolean;
}

/**
 * DENTIST
 *
 * @generated from message threedoclusion.v1.Dentist
 */
export declare class Dentist extends Message<Dentist> {
  /**
   * @generated from field: int32 id = 1;
   */
  id: number;

  /**
   * @generated from field: string email = 2;
   */
  email: string;

  /**
   * @generated from field: string first_name = 3;
   */
  firstName: string;

  /**
   * @generated from field: string last_name = 4;
   */
  lastName: string;

  constructor(data?: PartialMessage<Dentist>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "threedoclusion.v1.Dentist";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Dentist;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Dentist;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Dentist;

  static equals(a: Dentist | PlainMessage<Dentist> | undefined, b: Dentist | PlainMessage<Dentist> | undefined): boolean;
}

/**
 * @generated from message threedoclusion.v1.AddDentistRequest
 */
export declare class AddDentistRequest extends Message<AddDentistRequest> {
  /**
   * @generated from field: string email = 1;
   */
  email: string;

  /**
   * @generated from field: string password = 2;
   */
  password: string;

  /**
   * @generated from field: string first_name = 3;
   */
  firstName: string;

  /**
   * @generated from field: string last_name = 4;
   */
  lastName: string;

  constructor(data?: PartialMessage<AddDentistRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "threedoclusion.v1.AddDentistRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddDentistRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddDentistRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddDentistRequest;

  static equals(a: AddDentistRequest | PlainMessage<AddDentistRequest> | undefined, b: AddDentistRequest | PlainMessage<AddDentistRequest> | undefined): boolean;
}

/**
 * @generated from message threedoclusion.v1.AddDentistResponse
 */
export declare class AddDentistResponse extends Message<AddDentistResponse> {
  /**
   * @generated from field: string message = 1;
   */
  message: string;

  /**
   * @generated from field: int32 id = 2;
   */
  id: number;

  constructor(data?: PartialMessage<AddDentistResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "threedoclusion.v1.AddDentistResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddDentistResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddDentistResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddDentistResponse;

  static equals(a: AddDentistResponse | PlainMessage<AddDentistResponse> | undefined, b: AddDentistResponse | PlainMessage<AddDentistResponse> | undefined): boolean;
}

/**
 * @generated from message threedoclusion.v1.GetDentistByIdRequest
 */
export declare class GetDentistByIdRequest extends Message<GetDentistByIdRequest> {
  /**
   * @generated from field: int32 id = 1;
   */
  id: number;

  constructor(data?: PartialMessage<GetDentistByIdRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "threedoclusion.v1.GetDentistByIdRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDentistByIdRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDentistByIdRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDentistByIdRequest;

  static equals(a: GetDentistByIdRequest | PlainMessage<GetDentistByIdRequest> | undefined, b: GetDentistByIdRequest | PlainMessage<GetDentistByIdRequest> | undefined): boolean;
}

/**
 * @generated from message threedoclusion.v1.GetDentistByIdResponse
 */
export declare class GetDentistByIdResponse extends Message<GetDentistByIdResponse> {
  /**
   * @generated from field: int32 id = 1;
   */
  id: number;

  /**
   * @generated from field: string email = 2;
   */
  email: string;

  /**
   * @generated from field: string first_name = 3;
   */
  firstName: string;

  /**
   * @generated from field: string last_name = 4;
   */
  lastName: string;

  constructor(data?: PartialMessage<GetDentistByIdResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "threedoclusion.v1.GetDentistByIdResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDentistByIdResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDentistByIdResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDentistByIdResponse;

  static equals(a: GetDentistByIdResponse | PlainMessage<GetDentistByIdResponse> | undefined, b: GetDentistByIdResponse | PlainMessage<GetDentistByIdResponse> | undefined): boolean;
}

/**
 * @generated from message threedoclusion.v1.GetAllDentistsRequest
 */
export declare class GetAllDentistsRequest extends Message<GetAllDentistsRequest> {
  constructor(data?: PartialMessage<GetAllDentistsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "threedoclusion.v1.GetAllDentistsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAllDentistsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAllDentistsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAllDentistsRequest;

  static equals(a: GetAllDentistsRequest | PlainMessage<GetAllDentistsRequest> | undefined, b: GetAllDentistsRequest | PlainMessage<GetAllDentistsRequest> | undefined): boolean;
}

/**
 * @generated from message threedoclusion.v1.GetAllDentistsResponse
 */
export declare class GetAllDentistsResponse extends Message<GetAllDentistsResponse> {
  /**
   * @generated from field: repeated threedoclusion.v1.Dentist dentists = 1;
   */
  dentists: Dentist[];

  constructor(data?: PartialMessage<GetAllDentistsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "threedoclusion.v1.GetAllDentistsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAllDentistsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAllDentistsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAllDentistsResponse;

  static equals(a: GetAllDentistsResponse | PlainMessage<GetAllDentistsResponse> | undefined, b: GetAllDentistsResponse | PlainMessage<GetAllDentistsResponse> | undefined): boolean;
}

/**
 * @generated from message threedoclusion.v1.UpdateDentistByIdRequest
 */
export declare class UpdateDentistByIdRequest extends Message<UpdateDentistByIdRequest> {
  /**
   * @generated from field: int32 id = 1;
   */
  id: number;

  /**
   * @generated from field: string email = 2;
   */
  email: string;

  /**
   * @generated from field: string first_name = 3;
   */
  firstName: string;

  /**
   * @generated from field: string last_name = 4;
   */
  lastName: string;

  constructor(data?: PartialMessage<UpdateDentistByIdRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "threedoclusion.v1.UpdateDentistByIdRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateDentistByIdRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateDentistByIdRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateDentistByIdRequest;

  static equals(a: UpdateDentistByIdRequest | PlainMessage<UpdateDentistByIdRequest> | undefined, b: UpdateDentistByIdRequest | PlainMessage<UpdateDentistByIdRequest> | undefined): boolean;
}

/**
 * @generated from message threedoclusion.v1.UpdateDentistByIdResponse
 */
export declare class UpdateDentistByIdResponse extends Message<UpdateDentistByIdResponse> {
  /**
   * @generated from field: string message = 1;
   */
  message: string;

  constructor(data?: PartialMessage<UpdateDentistByIdResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "threedoclusion.v1.UpdateDentistByIdResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateDentistByIdResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateDentistByIdResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateDentistByIdResponse;

  static equals(a: UpdateDentistByIdResponse | PlainMessage<UpdateDentistByIdResponse> | undefined, b: UpdateDentistByIdResponse | PlainMessage<UpdateDentistByIdResponse> | undefined): boolean;
}

/**
 * @generated from message threedoclusion.v1.DeleteDentistByIdRequest
 */
export declare class DeleteDentistByIdRequest extends Message<DeleteDentistByIdRequest> {
  /**
   * @generated from field: int32 id = 1;
   */
  id: number;

  constructor(data?: PartialMessage<DeleteDentistByIdRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "threedoclusion.v1.DeleteDentistByIdRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteDentistByIdRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteDentistByIdRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteDentistByIdRequest;

  static equals(a: DeleteDentistByIdRequest | PlainMessage<DeleteDentistByIdRequest> | undefined, b: DeleteDentistByIdRequest | PlainMessage<DeleteDentistByIdRequest> | undefined): boolean;
}

/**
 * @generated from message threedoclusion.v1.DeleteDentistByIdResponse
 */
export declare class DeleteDentistByIdResponse extends Message<DeleteDentistByIdResponse> {
  /**
   * @generated from field: string message = 1;
   */
  message: string;

  /**
   * @generated from field: int32 id = 2;
   */
  id: number;

  /**
   * @generated from field: string email = 3;
   */
  email: string;

  constructor(data?: PartialMessage<DeleteDentistByIdResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "threedoclusion.v1.DeleteDentistByIdResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteDentistByIdResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteDentistByIdResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteDentistByIdResponse;

  static equals(a: DeleteDentistByIdResponse | PlainMessage<DeleteDentistByIdResponse> | undefined, b: DeleteDentistByIdResponse | PlainMessage<DeleteDentistByIdResponse> | undefined): boolean;
}

/**
 * @generated from message threedoclusion.v1.LoginRequest
 */
export declare class LoginRequest extends Message<LoginRequest> {
  /**
   * @generated from field: string email = 1;
   */
  email: string;

  /**
   * @generated from field: string password = 2;
   */
  password: string;

  constructor(data?: PartialMessage<LoginRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "threedoclusion.v1.LoginRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LoginRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LoginRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LoginRequest;

  static equals(a: LoginRequest | PlainMessage<LoginRequest> | undefined, b: LoginRequest | PlainMessage<LoginRequest> | undefined): boolean;
}

/**
 * @generated from message threedoclusion.v1.LoginResponse
 */
export declare class LoginResponse extends Message<LoginResponse> {
  /**
   * @generated from field: string message = 1;
   */
  message: string;

  /**
   * @generated from field: string token = 2;
   */
  token: string;

  /**
   * @generated from field: int32 id = 3;
   */
  id: number;

  /**
   * @generated from field: string email = 4;
   */
  email: string;

  /**
   * @generated from field: string first_name = 5;
   */
  firstName: string;

  /**
   * @generated from field: string last_name = 6;
   */
  lastName: string;

  constructor(data?: PartialMessage<LoginResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "threedoclusion.v1.LoginResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LoginResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LoginResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LoginResponse;

  static equals(a: LoginResponse | PlainMessage<LoginResponse> | undefined, b: LoginResponse | PlainMessage<LoginResponse> | undefined): boolean;
}

/**
 * @generated from message threedoclusion.v1.RegisterRequest
 */
export declare class RegisterRequest extends Message<RegisterRequest> {
  /**
   * @generated from field: string email = 1;
   */
  email: string;

  /**
   * @generated from field: string password = 2;
   */
  password: string;

  /**
   * @generated from field: string first_name = 3;
   */
  firstName: string;

  /**
   * @generated from field: string last_name = 4;
   */
  lastName: string;

  constructor(data?: PartialMessage<RegisterRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "threedoclusion.v1.RegisterRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RegisterRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RegisterRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RegisterRequest;

  static equals(a: RegisterRequest | PlainMessage<RegisterRequest> | undefined, b: RegisterRequest | PlainMessage<RegisterRequest> | undefined): boolean;
}

/**
 * @generated from message threedoclusion.v1.RegisterResponse
 */
export declare class RegisterResponse extends Message<RegisterResponse> {
  /**
   * @generated from field: string message = 1;
   */
  message: string;

  /**
   * @generated from field: string token = 2;
   */
  token: string;

  /**
   * @generated from field: int32 id = 3;
   */
  id: number;

  constructor(data?: PartialMessage<RegisterResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "threedoclusion.v1.RegisterResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RegisterResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RegisterResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RegisterResponse;

  static equals(a: RegisterResponse | PlainMessage<RegisterResponse> | undefined, b: RegisterResponse | PlainMessage<RegisterResponse> | undefined): boolean;
}

