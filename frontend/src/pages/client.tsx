import Link from 'next/link'

import { sendVR } from '@/gen/proto/threedoclusion/v1/service-ScanService_connectquery'
import { useQuery } from '@tanstack/react-query';
import { useState, useEffect } from 'react';


export default function ClientPage() {
    let scanId = 111 // Should be generated by clicking on certain scan, prop
    const [clientId, setClientId] = useState<number | undefined>(undefined);
    const [submitOK, setSubmitOK] = useState(false);
    const [sendOK, setSendOK] = useState(false);
    
    const query = sendVR.useQuery({ clientId, scanId });
    const { data, refetch } = useQuery(query.queryKey, query.queryFn, { enabled: false });


    useEffect(() => {
      async function fetchData() { // Still lacking -> make server side streaming as well so don't need to repeatedly call for check up of redirect OK
        if (submitOK) {
          await refetch();
          console.log(data);
          setSendOK(false);
        }
      }
      fetchData();
    }, [sendOK]);

    function afterSubmit(event: React.FormEvent<HTMLFormElement>) {
      event.preventDefault();
      let codeInput = document.getElementById("code") as HTMLInputElement | null;
      if (codeInput){
        setClientId(parseInt(codeInput.value, 10));
      }
      setSubmitOK(true);
    }

    const handleRedirect = () => {
       if (submitOK){
        setSendOK(true);
       }
       // if redirect OK -> Redirect OK prompt. Open new connection to /start-VR TO CHECK STATUS
       // With new connection:
       // If manual exit here: send to /start-VR
       // If data from new connection: saved: OK -> Prompt saved successfully.
    };

  return (
    <div>
      <h1>Client Page</h1>
      <form onSubmit={afterSubmit}>
        Code: <input type="text" id="code" size={20} name="code"/><br/>
        <input type="submit" value="Submit"/> 
      </form>
      <button id="redirect-button" onClick={handleRedirect}>Send to VR</button>

      <button>
        <Link href="/video">Video</Link>
      </button>
    </div>
  )
}