import { sendVR } from '@/gen/proto/threedoclusion/v1/service-ScanService_connectquery';
import { useQuery } from '@tanstack/react-query';
import { useState, useEffect, SetStateAction } from 'react';
//import Cookies from 'js-cookie';
const Cookies = require('js-cookie');
import stylesButton from '@/styles/Buttons.module.css';
import stylesText from '@/styles/Header.module.css';
import Image from 'next/image';
import reluLogo from '../../public/relu-logo-small.png';
import { useRouter } from 'next/router';

function generateCode(): string {
  return Array.from({ length: 8 }, () => Math.floor(Math.random() * 10)).join('');
}

export default function ClientPage() {
  const [code, setCode] = useState(generateCode());
  const [displayCode, setDisplayCode] = useState('');

  var displaycode;

  let scanId = 111; // Should be generated by clicking on certain scan
  const [clientId, setClientId] = useState<number | undefined>(undefined);
  const [submitOK, setSubmitOK] = useState(false);

  const query = sendVR.useQuery({ clientId, scanId });
  const { data, refetch } = useQuery(query.queryKey, query.queryFn, { enabled: false });

  function afterSubmit(event: React.FormEvent<HTMLFormElement>) {
    event.preventDefault();
    let codeInput = document.getElementById('code') as HTMLInputElement | null;

    if (codeInput) {
      setClientId(parseInt(codeInput.value, 10));
    }
    setSubmitOK(true);
  }

  const handleRedirect = () => {
    if (submitOK) {
      refetch();
      setSubmitOK(false);
    }
  };

  var cookieCode: string | undefined;
  useEffect(() => {
    if (typeof window !== 'undefined') {
      cookieCode = Cookies.get('clientcookie');
    }

    //const cookieCode = Cookies.get('clientcookie');

    if (!cookieCode) {
      const codeString: string = `${code}`;
      Cookies.set('clientcookie', codeString, { expires: 7, path: '/' });
      console.log('new code:', code);
      setDisplayCode(code);
    } else {
      setDisplayCode(cookieCode);
      console.log('your code already is:', cookieCode);
    }

    setClientId(parseInt(cookieCode as string, 10));
    setSubmitOK(true);
  }, []);

  const router = useRouter();
  const home = () => router.push('/patient');

  return (
    <div>
      <Image className={stylesText.small_logo_log} src={reluLogo} alt="relu logo" />
      <div className={stylesText.settingsContainer}>
        <div className={stylesText.settingsCodeWrapper}>
          <p className={stylesText.settingsCode}> {displayCode} </p>
        </div>
        <p className={stylesText.settingsText}>Enter the code above in your VR headset.</p>
        <div className={stylesText.settingsButtons}>
          <button type="button" className={stylesButton.relu_btn} id={stylesButton.homeIcon} onClick={home}></button>
          <button type="button" className={stylesButton.relu_btn} id={stylesButton.loadingIconSettings}></button>
        </div>
      </div>
    </div>
  );
}
