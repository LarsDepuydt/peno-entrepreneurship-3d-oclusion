syntax = "proto3";

package threedoclusion.v1;

option go_package = "github.com/LarsDepuydt/peno-entrepreneurship-3d-oclusion";


service ScanService {
  rpc SendVR(SendVRRequest) returns (SendVRResponse) {}
  rpc Waiting(WaitingRequest) returns (stream WaitingResponse) {}
  rpc AddScan(AddScanRequest) returns (AddScanResponse) {}
  rpc DeleteScan(DeleteScanRequest) returns (DeleteScanResponse) {}
  rpc GetAllScans(GetAllScansRequest) returns (GetAllScansResponse) {}
  rpc GetScanByID(GetScanByIDRequest) returns (GetScanByIDResponse) {}
  rpc GetScanByDate(GetScanByDateRequest) returns (GetScanByDateResponse) {}


  rpc AddTag(AddTagRequest) returns (AddTagResponse) {}
  rpc DeleteTag(DeleteTagRequest) returns (DeleteTagResponse) {}
  rpc GetAllTags(GetAllTagsRequest) returns (GetAllTagsResponse) {}
  rpc GetTagByID(GetTagByIDRequest) returns (GetTagByIDResponse) {}
  rpc GetAllTagsByType(GetAllTagsByTypeRequest) returns (GetAllTagsByTypeResponse) {}

  rpc SendPositionScan (SendPositionScanRequest) returns (SendPositionScanResponse) {}
  rpc GetPositionScan (GetPositionScanRequest) returns (GetPositionScanResponse) {}
  rpc AddPatient(AddPatientRequest) returns (AddPatientResponse) {}
  rpc DeletePatient(DeletePatientRequest) returns (DeletePatientResponse) {}
  rpc GetAllPatients(GetAllPatientsRequest) returns (GetAllPatientsResponse) {}
  rpc GetPatientByID(GetPatientByIDRequest) returns (GetPatientByIDResponse) {}
  rpc GetPatientByName(GetPatientByNameRequest) returns (GetPatientByNameResponse) {}

}


message RowDataTag {
  int64 id = 1;
  string bite = 2;
}

message Scan {
  int64 id = 1;
  string scan = 2;
  string date = 3;
}

message Patient{
  int64 id = 1;
  string first_name = 2;
  string last_name = 3;
  int64 pinned = 4;
  string notes = 5;
  
}

// TAGS
message AddTagRequest {
  string bite = 1;
}

message AddTagResponse {
  string message = 1;
}

message DeleteTagRequest {
  int64 id = 1;
}

message DeleteTagResponse {
  string message = 1;
}

message GetAllTagsRequest {}

message GetAllTagsResponse {
  repeated RowDataTag tags = 1;
}

message GetTagByIDRequest {
  int64 id = 1;
}

message GetTagByIDResponse {
  int64 id = 1;
  string bite = 2;
}

message GetAllTagsByTypeRequest {
  string type = 1;
}

message GetAllTagsByTypeResponse {
  repeated RowDataTag tags = 1;
}


// SCANS
message AddScanRequest {
  string scan_file = 1;
  string scan_date = 2;
}

message AddScanResponse {
  string message = 1;
}

message DeleteScanRequest{
  int64 id = 1;
}

message DeleteScanResponse {
  string message = 1;
}

message GetAllScansRequest {}

message GetAllScansResponse {
  repeated int64 id_data =  1;
  repeated string scan_dates = 3;
}

message GetScanByIDRequest {
  int64 id = 1;
}

message GetScanByIDResponse {
  int64 id =  1;
  string scan_date = 3;
}

message GetScanByDateRequest {
  string date = 1 ;
}

message GetScanByDateResponse {
  repeated int64 id_data =  1;
  repeated string scan_dates = 3;
}

//PATIENT

message AddPatientRequest{
  string first_name = 1;
  string last_name = 2;
  int64 pinned = 3;
  string notes = 4;
}

message AddPatientResponse{
  string message = 1;
}

message TagResponse {
  string id = 1;
  string color = 2;
  string text = 3;
}


message SendVRRequest {
  int32 client_id = 1;
  int32 scan_id = 2;
}

message SendPositionScanRequest {
  float lower_x = 1;
  float lower_y = 2;
  float lower_z = 3;
  float lower_r_x = 4;
  float lower_r_y = 5;
  float lower_r_z = 6;
  float upper_x = 7;
  float upper_y = 8;
  float upper_z = 9;
  float upper_r_x = 10;
  float upper_r_y = 11;
  float upper_r_z = 12;
  int32 scan_id = 13;
}

message SendPositionScanResponse {
  bool saved = 1;
}

message GetPositionScanRequest {
  int32 scan_id = 1;
}

message GetPositionScanResponse {
  float lower_x = 1;
  float lower_y = 2;
  float lower_z = 3;
  float lower_r_x = 4;
  float lower_r_y = 5;
  float lower_r_z = 6;
  float upper_x = 7;
  float upper_y = 8;
  float upper_z = 9;
  float upper_r_x = 10;
  float upper_r_y = 11;
  float upper_r_z = 12;
}
message SendVRResponse {
  string feedback = 1;
}

message WaitingRequest {
  int32 unique_code = 1;
}

message WaitingResponse {
  bool redirect = 1;
  string url = 2;
}

message DeletePatientRequest{
  int64 id = 1;
}

message DeletePatientResponse{
  string message = 1;
}

message GetAllPatientsRequest{}

message GetAllPatientsResponse{
  repeated Patient patients = 1;
}

message GetPatientByIDRequest{
  int64 id = 1;
}

message GetPatientByIDResponse{
  int64 id = 1;
  string first_name = 2;
  string last_name = 3;
  int64 pinned = 4;
  string notes = 5;
}

message GetPatientByNameRequest{
  optional string first_name = 1;
  optional string last_name = 2;

}

message GetPatientByNameResponse{
  repeated Patient patients = 1;
}
